create type "public"."refund_status_enum" as enum ('NONE', 'DENIED', 'APPROVED', 'REQUESTED');

create table "public"."refunded_ticket_orders" (
    "id" bigint generated by default as identity not null,
    "event_id" bigint not null,
    "student_id" uuid,
    "org_id" bigint,
    "quantity" bigint not null,
    "created_at" timestamp with time zone not null default now(),
    "order_id" text not null,
    "ticket_service" ticket_service_enum not null default 'stripe'::ticket_service_enum,
    "refund_status" refund_status_enum not null default 'NONE'::refund_status_enum
);


alter table "public"."ticket_orders" add column "refund_status" refund_status_enum not null default 'NONE'::refund_status_enum;

CREATE UNIQUE INDEX ticket_orders_duplicate_pkey ON public.refunded_ticket_orders USING btree (id);

alter table "public"."refunded_ticket_orders" add constraint "ticket_orders_duplicate_pkey" PRIMARY KEY using index "ticket_orders_duplicate_pkey";

alter table "public"."refunded_ticket_orders" add constraint "has_student_or_org_id" CHECK ((((student_id IS NOT NULL) AND (org_id IS NULL)) OR ((student_id IS NULL) AND (org_id IS NOT NULL)))) not valid;

alter table "public"."refunded_ticket_orders" validate constraint "has_student_or_org_id";

alter table "public"."refunded_ticket_orders" add constraint "ticket_orders_duplicate_event_id_fkey" FOREIGN KEY (event_id) REFERENCES events(event_id) not valid;

alter table "public"."refunded_ticket_orders" validate constraint "ticket_orders_duplicate_event_id_fkey";

alter table "public"."refunded_ticket_orders" add constraint "ticket_orders_duplicate_org_id_fkey" FOREIGN KEY (org_id) REFERENCES orgs(org_id) not valid;

alter table "public"."refunded_ticket_orders" validate constraint "ticket_orders_duplicate_org_id_fkey";

alter table "public"."refunded_ticket_orders" add constraint "ticket_orders_duplicate_student_id_fkey" FOREIGN KEY (student_id) REFERENCES students(student_id) not valid;

alter table "public"."refunded_ticket_orders" validate constraint "ticket_orders_duplicate_student_id_fkey";

grant delete on table "public"."refunded_ticket_orders" to "anon";

grant insert on table "public"."refunded_ticket_orders" to "anon";

grant references on table "public"."refunded_ticket_orders" to "anon";

grant select on table "public"."refunded_ticket_orders" to "anon";

grant trigger on table "public"."refunded_ticket_orders" to "anon";

grant truncate on table "public"."refunded_ticket_orders" to "anon";

grant update on table "public"."refunded_ticket_orders" to "anon";

grant delete on table "public"."refunded_ticket_orders" to "authenticated";

grant insert on table "public"."refunded_ticket_orders" to "authenticated";

grant references on table "public"."refunded_ticket_orders" to "authenticated";

grant select on table "public"."refunded_ticket_orders" to "authenticated";

grant trigger on table "public"."refunded_ticket_orders" to "authenticated";

grant truncate on table "public"."refunded_ticket_orders" to "authenticated";

grant update on table "public"."refunded_ticket_orders" to "authenticated";

grant delete on table "public"."refunded_ticket_orders" to "service_role";

grant insert on table "public"."refunded_ticket_orders" to "service_role";

grant references on table "public"."refunded_ticket_orders" to "service_role";

grant select on table "public"."refunded_ticket_orders" to "service_role";

grant trigger on table "public"."refunded_ticket_orders" to "service_role";

grant truncate on table "public"."refunded_ticket_orders" to "service_role";

grant update on table "public"."refunded_ticket_orders" to "service_role";